#shiny example on interactive shiny with
## brush 
library(shiny)

# Define server logic required to draw a histogram
shinyServer(function(input, output) {
    model <- reactive({
        brushed_data <- brushedPoints(
            trees, input$brush1, xvar ="Girth", yvar ="Volume"  # we add here the input from the UI
        )
        if(nrow(brushed_data) < 2){ # if there are fewer than 2 points which is required for the model t will return NULL
            return(NULL)
        }
        lm(Volume~Girth, data = brushed_data) # data is the brushed data - this will output that linear model# thats at the end what is written to "model"
    })
    output$slopeOut <- renderText({
        if(is.null(model())){
            "No Model Found" # if this model is fit the renderText which we explain to shiny - if there is no model then return text otherwise the model
        } else{
            model()[[1]][2]
        }
    })
    output$intOut <- renderText({
        if(is.null(model())){
            "No Model Found"
        } else {model()[[1]][1]
                }
    })
    output$plot1 <- renderPlot({
        plot(trees$Girth, trees$Volume, xlab="Girth", ylab="Volume", main="Tree Measurements", cex = 1.5, pch = 16, bty ="n")
        if(!is.null(model())){
            abline(model(), col ="blue", lwd =2)
        }
    })
    })
